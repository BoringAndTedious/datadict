<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qk365.datadict.dao.MysqlMapper">
	
	<!-- 查询所有表名 -->
	<select id="findTableName" resultType="java.util.Map">
	    <!--
	    select t.name,t.crdate from sysobjects t where xtype='u' ORDER BY t.name
	    -->
	    select t.name,CONVERT(NVARCHAR(100),ifnull(g.[value],'')) AS explain,t.id  from sysobjects t 
         left join sys.extended_properties g
         on (t.id = g.major_id AND g.minor_id = 0) 
         where t.xtype='u' ORDER BY t.name;
	</select>
	
	<select id="findTableNameExplain" resultType="java.util.Map">
	    select  CONVERT(NVARCHAR(100),ifnull(g.[value],'')) AS explain  from  
	     sys.extended_properties g where 
         g.major_id =#{id}  AND g.minor_id = 0 
	</select>
	
	<resultMap id="BaseResultMap" type="com.qk365.datadict.po.TableInfo">
    <result column="idx" jdbcType="INTEGER" property="idx" />
    <result column="columnName" jdbcType="VARCHAR" property="columnName" />
    <result column="explain" jdbcType="VARCHAR" property="explain" />
    <result column="dataType" jdbcType="VARCHAR" property="dataType" />
    <result column="length" jdbcType="INTEGER" property="length" />
    <result column="decimalDigits" jdbcType="INTEGER" property="decimalDigits" />
    <result column="identification" jdbcType="VARCHAR" property="identification" />
    <result column="pk" jdbcType="VARCHAR" property="pk" />
    <result column="defaultValue" jdbcType="VARCHAR" property="defaultValue" />
    <result column="empty" jdbcType="VARCHAR" property="empty" />
  </resultMap>
  
 <select id="findTableInfo" resultMap="BaseResultMap">
	SELECT   
        col.colorder AS idx ,
        col.name AS columnName ,
        ifnull(ep.[value], '') AS explain ,
        t.name AS dataType,
        col.length AS length ,
        ifnull(COLUMNPROPERTY(col.id, col.name, 'Scale'), 0) AS decimalDigits ,
        CASE WHEN COLUMNPROPERTY(col.id, col.name, 'IsIdentity') = 1 THEN '1'
             ELSE ''
        END AS identification ,
        CASE WHEN EXISTS ( SELECT   1
                           FROM     dbo.sysindexes si
                                    INNER JOIN dbo.sysindexkeys sik ON si.id = sik.id
                                    AND si.indid = sik.indid
                                    INNER JOIN dbo.syscolumns sc ON sc.id = sik.id
                                    AND sc.colid = sik.colid
                                    INNER JOIN dbo.sysobjects so ON so.name = si.name
                                    AND so.xtype = 'PK'
                           WHERE    sc.id = col.id
                                    AND sc.colid = col.colid ) THEN '1'
             ELSE ''
        END AS pk ,
         CASE WHEN col.ifnullable = 1 THEN '1' ELSE '' END AS empty,
        ifnull(comm.text, '') AS defaultValue
        FROM    dbo.syscolumns col
        LEFT  JOIN dbo.systypes t ON col.xtype = t.xusertype
        inner JOIN dbo.sysobjects obj ON col.id = obj.id
        AND obj.xtype = 'U'
        AND obj.status >= 0
        LEFT  JOIN dbo.syscomments comm ON col.cdefault = comm.id
        LEFT  JOIN sys.extended_properties ep ON col.id = ep.major_id
        AND col.colid = ep.minor_id
        AND ep.name = 'MS_Description'
        LEFT  JOIN sys.extended_properties epTwo ON obj.id = epTwo.major_id
        AND epTwo.minor_id = 0
        AND epTwo.name = 'MS_Description'
        WHERE   obj.id = #{id} 
        ORDER BY col.colorder ;
	</select>
	 
	<!--
	         新增表描述信息
	   EXECUTE sp_addextendedproperty N'MS_Description', '账单记录表', N'user', N'dbo', N'table', N'bill_manage', NULL, NULL
	         修改表描述信息
	   EXECUTE sp_updateextendedproperty   N'MS_Description', '账单记录表', N'user', N'dbo', N'table', N'bill_manage', NULL, NULL
	         查询表描述信息
	   select  a.name AS 表名, CONVERT(NVARCHAR(100),ifnull(g.[value],'-')) AS 说明  from
       sys.tables a left join sys.extended_properties g on (a.object_id = g.major_id AND g.minor_id = 0) where a.name = 'Bill_Manage'
	 
	        为字段a1添加描述信息
	   EXECUTE sp_addextendedproperty N'MS_Description', '姓名', N'user', N'dbo', N'table', N'表', N'column', N'a1'
	        为字段a2添加描述信息
	   EXECUTE sp_addextendedproperty N'MS_Description', '性别', N'user', N'dbo', N'table', N'表', N'column', N'a2'
	        更新表中列a1的描述属性：
	   EXEC sp_updateextendedproperty 'MS_Description','字段1','user',dbo,'table','表','column',a1
	
	          删除表中列a1的描述属性：
	   EXEC sp_dropextendedproperty 'MS_Description','user',dbo,'table','表','column',a1
	 -->
	 
	 <select id="addTableExplain"  statementType="CALLABLE">
        EXECUTE sp_addextendedproperty   N'MS_Description', '${explain}', N'user', N'dbo', N'table', N'${tableName}', NULL, NULL   
     </select>
     
	 <select id="editTableExplain"  statementType="CALLABLE">
        EXECUTE sp_updateextendedproperty   N'MS_Description', '${explain}', N'user', N'dbo', N'table', N'${tableName}', NULL, NULL   
     </select>
    
     <select id="addColumnExplain"  statementType="CALLABLE">
         EXEC sp_addextendedproperty 'MS_Description',#{explain},'user',dbo,'table',#{tableName},'column',${columnName}
     </select>
     
     <select id="editColumnExplain"  statementType="CALLABLE">
         EXEC sp_updateextendedproperty 'MS_Description',#{explain},'user',dbo,'table',#{tableName},'column',${columnName}
     </select>
</mapper>